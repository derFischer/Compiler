State 1 conflicts: 2 shift/reduce
State 33 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 88 conflicts: 12 shift/reduce
State 96 conflicts: 13 shift/reduce
State 97 conflicts: 12 shift/reduce
State 123 conflicts: 12 shift/reduce
State 124 conflicts: 12 shift/reduce
State 140 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | ID LPAREN actuals RPAREN
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | exp EQ exp
   12    | exp NEQ exp
   13    | exp LT exp
   14    | exp LE exp
   15    | exp GT exp
   16    | exp GE exp
   17    | MINUS exp
   18    | ID LBRACE rec RBRACE
   19    | LPAREN sequencing RPAREN
   20    | lvalue ASSIGN exp
   21    | exp OR exp
   22    | exp AND exp
   23    | IF exp THEN exp ELSE exp
   24    | IF exp THEN exp
   25    | WHILE exp DO exp
   26    | FOR ID ASSIGN exp TO exp DO exp
   27    | BREAK
   28    | LET decs IN expseq END
   29    | ID LBRACK exp RBRACK OF exp

   30 expseq: sequencing_exps
   31       | %empty

   32 nonemptyactuals: exp COMMA nonemptyactuals
   33                | exp

   34 actuals: nonemptyactuals
   35        | %empty

   36 sequencing_exps: exp SEMICOLON sequencing_exps
   37                | exp

   38 sequencing: sequencing_exps
   39           | %empty

   40 lvalue: ID
   41       | lvalue DOT ID
   42       | lvalue LBRACK exp RBRACK
   43       | ID DOT ID
   44       | ID LBRACK exp RBRACK

   45 decs_nonempty: decs_nonempty_s decs_nonempty
   46              | decs_nonempty_s

   47 decs: decs_nonempty
   48     | %empty

   49 decs_nonempty_s: vardec
   50                | fundec
   51                | tydec

   52 rec_one: ID EQ exp

   53 rec_nonempty: rec_one COMMA rec_nonempty
   54             | rec_one

   55 rec: rec_nonempty
   56    | %empty

   57 vardec: VAR ID ASSIGN exp
   58       | VAR ID COLON ID ASSIGN exp

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   60           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   61 fundec: fundec_one fundec
   62       | fundec_one

   63 tydec_one: TYPE ID EQ ty

   64 tydec: tydec_one tydec
   65      | tydec_one

   66 ty: ID
   67   | LBRACE tyfields RBRACE
   68   | ARRAY OF ID

   69 tyfield_one: ID COLON ID

   70 tyfields_nonempty: tyfield_one COMMA tyfields_nonempty
   71                  | tyfield_one

   72 tyfields: tyfields_nonempty
   73         | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 18 26 29 40 41 43 44 52 57 58 59 60 63 66 68 69
STRING (259) 5
INT (260) 4
COMMA (261) 32 53 70
COLON (262) 58 60 69
SEMICOLON (263) 36
LPAREN (264) 6 19 59 60
RPAREN (265) 6 19 59 60
LBRACK (266) 29 42 44
RBRACK (267) 29 42 44
LBRACE (268) 18 67
RBRACE (269) 18 67
DOT (270) 41 43
PLUS (271) 7
MINUS (272) 8 17
TIMES (273) 9
DIVIDE (274) 10
EQ (275) 11 52 59 60 63
NEQ (276) 12
LT (277) 13
LE (278) 14
GT (279) 15
GE (280) 16
AND (281) 22
OR (282) 21
ASSIGN (283) 20 26 57 58
ARRAY (284) 68
IF (285) 23 24
THEN (286) 23 24
ELSE (287) 23
WHILE (288) 25
FOR (289) 26
TO (290) 26
DO (291) 25 26
LET (292) 28
IN (293) 28
END (294) 28
OF (295) 29 68
BREAK (296) 27
NIL (297) 3
FUNCTION (298) 59 60
VAR (299) 57 58
TYPE (300) 63
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 7 8 9 10 11 12 13 14 15 16 17
    20 21 22 23 24 25 26 29 32 33 36 37 42 44 52 57 58 59 60
expseq (50)
    on left: 30 31, on right: 28
nonemptyactuals (51)
    on left: 32 33, on right: 32 34
actuals (52)
    on left: 34 35, on right: 6
sequencing_exps (53)
    on left: 36 37, on right: 30 36 38
sequencing (54)
    on left: 38 39, on right: 19
lvalue (55)
    on left: 40 41 42 43 44, on right: 2 20 41 42
decs_nonempty (56)
    on left: 45 46, on right: 45 47
decs (57)
    on left: 47 48, on right: 28
decs_nonempty_s (58)
    on left: 49 50 51, on right: 45 46
rec_one (59)
    on left: 52, on right: 53 54
rec_nonempty (60)
    on left: 53 54, on right: 53 55
rec (61)
    on left: 55 56, on right: 18
vardec (62)
    on left: 57 58, on right: 49
fundec_one (63)
    on left: 59 60, on right: 61 62
fundec (64)
    on left: 61 62, on right: 50 61
tydec_one (65)
    on left: 63, on right: 64 65
tydec (66)
    on left: 64 65, on right: 51 64
ty (67)
    on left: 66 67 68, on right: 63
tyfield_one (68)
    on left: 69, on right: 70 71
tyfields_nonempty (69)
    on left: 70 71, on right: 70 72
tyfields (70)
    on left: 72 73, on right: 59 60 67


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

    6 exp: ID . LPAREN actuals RPAREN
   18    | ID . LBRACE rec RBRACE
   29    | ID . LBRACK exp RBRACK OF exp
   40 lvalue: ID .
   43       | ID . DOT ID
   44       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17
    DOT     shift, and go to state 18

    LBRACK    [reduce using rule 40 (lvalue)]
    DOT       [reduce using rule 40 (lvalue)]
    $default  reduce using rule 40 (lvalue)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   19 exp: LPAREN . sequencing RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (sequencing)

    exp              go to state 19
    sequencing_exps  go to state 20
    sequencing       go to state 21
    lvalue           go to state 14


State 5

   17 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 6

   23 exp: IF . exp THEN exp ELSE exp
   24    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 23
    lvalue  go to state 14


State 7

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 24
    lvalue  go to state 14


State 8

   26 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


State 9

   28 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 48 (decs)

    decs_nonempty    go to state 29
    decs             go to state 30
    decs_nonempty_s  go to state 31
    vardec           go to state 32
    fundec_one       go to state 33
    fundec           go to state 34
    tydec_one        go to state 35
    tydec            go to state 36


State 10

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


State 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 37


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   20    | lvalue . ASSIGN exp
   41 lvalue: lvalue . DOT ID
   42       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51
    ASSIGN  shift, and go to state 52

    $default  reduce using rule 2 (exp)


State 15

    6 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 35 (actuals)

    exp              go to state 53
    nonemptyactuals  go to state 54
    actuals          go to state 55
    lvalue           go to state 14


State 16

   29 exp: ID LBRACK . exp RBRACK OF exp
   44 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 56
    lvalue  go to state 14


State 17

   18 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 57

    $default  reduce using rule 56 (rec)

    rec_one       go to state 58
    rec_nonempty  go to state 59
    rec           go to state 60


State 18

   43 lvalue: ID DOT . ID

    ID  shift, and go to state 61


State 19

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   36 sequencing_exps: exp . SEMICOLON sequencing_exps
   37                | exp .

    SEMICOLON  shift, and go to state 62
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 37 (sequencing_exps)


State 20

   38 sequencing: sequencing_exps .

    $default  reduce using rule 38 (sequencing)


State 21

   19 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 63


State 22

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | MINUS exp .
   21    | exp . OR exp
   22    | exp . AND exp

    $default  reduce using rule 17 (exp)


State 23

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | IF exp . THEN exp ELSE exp
   24    | IF exp . THEN exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 64


State 24

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   25    | WHILE exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 65


State 25

   26 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 66


State 26

   59 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   60           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 27

   57 vardec: VAR . ID ASSIGN exp
   58       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 28

   63 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 69


State 29

   47 decs: decs_nonempty .

    $default  reduce using rule 47 (decs)


State 30

   28 exp: LET decs . IN expseq END

    IN  shift, and go to state 70


State 31

   45 decs_nonempty: decs_nonempty_s . decs_nonempty
   46              | decs_nonempty_s .

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 46 (decs_nonempty)

    decs_nonempty    go to state 71
    decs_nonempty_s  go to state 31
    vardec           go to state 32
    fundec_one       go to state 33
    fundec           go to state 34
    tydec_one        go to state 35
    tydec            go to state 36


State 32

   49 decs_nonempty_s: vardec .

    $default  reduce using rule 49 (decs_nonempty_s)


State 33

   61 fundec: fundec_one . fundec
   62       | fundec_one .

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 62 (fundec)]
    $default  reduce using rule 62 (fundec)

    fundec_one  go to state 33
    fundec      go to state 72


State 34

   50 decs_nonempty_s: fundec .

    $default  reduce using rule 50 (decs_nonempty_s)


State 35

   64 tydec: tydec_one . tydec
   65      | tydec_one .

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 65 (tydec)]
    $default  reduce using rule 65 (tydec)

    tydec_one  go to state 35
    tydec      go to state 73


State 36

   51 decs_nonempty_s: tydec .

    $default  reduce using rule 51 (decs_nonempty_s)


State 37

    0 $accept: program $end .

    $default  accept


State 38

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 39

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 40

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


State 41

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 42

   11 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


State 43

   12 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14


State 44

   13 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14


State 45

   14 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14


State 46

   15 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14


State 47

   16 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14


State 48

   22 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14


State 49

   21 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14


State 50

   42 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 86
    lvalue  go to state 14


State 51

   41 lvalue: lvalue DOT . ID

    ID  shift, and go to state 87


State 52

   20 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 88
    lvalue  go to state 14


State 53

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   32 nonemptyactuals: exp . COMMA nonemptyactuals
   33                | exp .

    COMMA   shift, and go to state 89
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 33 (nonemptyactuals)


State 54

   34 actuals: nonemptyactuals .

    $default  reduce using rule 34 (actuals)


State 55

    6 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 90


State 56

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   29    | ID LBRACK exp . RBRACK OF exp
   44 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 91
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 57

   52 rec_one: ID . EQ exp

    EQ  shift, and go to state 92


State 58

   53 rec_nonempty: rec_one . COMMA rec_nonempty
   54             | rec_one .

    COMMA  shift, and go to state 93

    $default  reduce using rule 54 (rec_nonempty)


State 59

   55 rec: rec_nonempty .

    $default  reduce using rule 55 (rec)


State 60

   18 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 94


State 61

   43 lvalue: ID DOT ID .

    $default  reduce using rule 43 (lvalue)


State 62

   36 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 19
    sequencing_exps  go to state 95
    lvalue           go to state 14


State 63

   19 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 19 (exp)


State 64

   23 exp: IF exp THEN . exp ELSE exp
   24    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


State 65

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 97
    lvalue  go to state 14


State 66

   26 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 98
    lvalue  go to state 14


State 67

   59 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   60           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


State 68

   57 vardec: VAR ID . ASSIGN exp
   58       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 100
    ASSIGN  shift, and go to state 101


State 69

   63 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 102


State 70

   28 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 31 (expseq)

    exp              go to state 19
    expseq           go to state 103
    sequencing_exps  go to state 104
    lvalue           go to state 14


State 71

   45 decs_nonempty: decs_nonempty_s decs_nonempty .

    $default  reduce using rule 45 (decs_nonempty)


State 72

   61 fundec: fundec_one fundec .

    $default  reduce using rule 61 (fundec)


State 73

   64 tydec: tydec_one tydec .

    $default  reduce using rule 64 (tydec)


State 74

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 7 (exp)


State 75

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 8 (exp)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    $default  reduce using rule 9 (exp)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    $default  reduce using rule 10 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   11    | exp EQ exp .
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   12    | exp NEQ exp .
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 12 (exp)


State 80

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   13    | exp LT exp .
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 81

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   14    | exp LE exp .
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 82

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   15    | exp GT exp .
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 83

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   16    | exp GE exp .
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 84

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   22    | exp AND exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 22 (exp)


State 85

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   21    | exp OR exp .
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 21 (exp)


State 86

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   42 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 105
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 87

   41 lvalue: lvalue DOT ID .

    $default  reduce using rule 41 (lvalue)


State 88

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   20    | lvalue ASSIGN exp .
   21    | exp . OR exp
   22    | exp . AND exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 20 (exp)]
    MINUS     [reduce using rule 20 (exp)]
    TIMES     [reduce using rule 20 (exp)]
    DIVIDE    [reduce using rule 20 (exp)]
    EQ        [reduce using rule 20 (exp)]
    NEQ       [reduce using rule 20 (exp)]
    LT        [reduce using rule 20 (exp)]
    LE        [reduce using rule 20 (exp)]
    GT        [reduce using rule 20 (exp)]
    GE        [reduce using rule 20 (exp)]
    AND       [reduce using rule 20 (exp)]
    OR        [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


State 89

   32 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 53
    nonemptyactuals  go to state 106
    lvalue           go to state 14


State 90

    6 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 6 (exp)


State 91

   29 exp: ID LBRACK exp RBRACK . OF exp
   44 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 107

    $default  reduce using rule 44 (lvalue)


State 92

   52 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 108
    lvalue  go to state 14


State 93

   53 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 57

    rec_one       go to state 58
    rec_nonempty  go to state 109


State 94

   18 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 18 (exp)


State 95

   36 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 36 (sequencing_exps)


State 96

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | IF exp THEN exp . ELSE exp
   24    | IF exp THEN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 110

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    ELSE      [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 97

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   25    | WHILE exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 98

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   26    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 111


State 99

   59 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   60           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 112

    $default  reduce using rule 73 (tyfields)

    tyfield_one        go to state 113
    tyfields_nonempty  go to state 114
    tyfields           go to state 115


State 100

   58 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 116


State 101

   57 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 117
    lvalue  go to state 14


State 102

   63 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 118
    LBRACE  shift, and go to state 119
    ARRAY   shift, and go to state 120

    ty  go to state 121


State 103

   28 exp: LET decs IN expseq . END

    END  shift, and go to state 122


State 104

   30 expseq: sequencing_exps .

    $default  reduce using rule 30 (expseq)


State 105

   42 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 42 (lvalue)


State 106

   32 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 32 (nonemptyactuals)


State 107

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 123
    lvalue  go to state 14


State 108

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   52 rec_one: ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 52 (rec_one)


State 109

   53 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 53 (rec_nonempty)


State 110

   23 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 124
    lvalue  go to state 14


State 111

   26 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 125
    lvalue  go to state 14


State 112

   69 tyfield_one: ID . COLON ID

    COLON  shift, and go to state 126


State 113

   70 tyfields_nonempty: tyfield_one . COMMA tyfields_nonempty
   71                  | tyfield_one .

    COMMA  shift, and go to state 127

    $default  reduce using rule 71 (tyfields_nonempty)


State 114

   72 tyfields: tyfields_nonempty .

    $default  reduce using rule 72 (tyfields)


State 115

   59 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   60           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 128


State 116

   58 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 129


State 117

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   57 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 57 (vardec)


State 118

   66 ty: ID .

    $default  reduce using rule 66 (ty)


State 119

   67 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 112

    $default  reduce using rule 73 (tyfields)

    tyfield_one        go to state 113
    tyfields_nonempty  go to state 114
    tyfields           go to state 130


State 120

   68 ty: ARRAY . OF ID

    OF  shift, and go to state 131


State 121

   63 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 63 (tydec_one)


State 122

   28 exp: LET decs IN expseq END .

    $default  reduce using rule 28 (exp)


State 123

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   29    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 124

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 125

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   26    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 132


State 126

   69 tyfield_one: ID COLON . ID

    ID  shift, and go to state 133


State 127

   70 tyfields_nonempty: tyfield_one COMMA . tyfields_nonempty

    ID  shift, and go to state 112

    tyfield_one        go to state 113
    tyfields_nonempty  go to state 134


State 128

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   60           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 135
    EQ     shift, and go to state 136


State 129

   58 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 137
    lvalue  go to state 14


State 130

   67 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 138


State 131

   68 ty: ARRAY OF . ID

    ID  shift, and go to state 139


State 132

   26 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 140
    lvalue  go to state 14


State 133

   69 tyfield_one: ID COLON ID .

    $default  reduce using rule 69 (tyfield_one)


State 134

   70 tyfields_nonempty: tyfield_one COMMA tyfields_nonempty .

    $default  reduce using rule 70 (tyfields_nonempty)


State 135

   60 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 141


State 136

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 142
    lvalue  go to state 14


State 137

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   58 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 58 (vardec)


State 138

   67 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 67 (ty)


State 139

   68 ty: ARRAY OF ID .

    $default  reduce using rule 68 (ty)


State 140

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   26    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 141

   60 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 143


State 142

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 59 (fundec_one)


State 143

   60 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 144
    lvalue  go to state 14


State 144

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | exp . OR exp
   22    | exp . AND exp
   60 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 60 (fundec_one)
